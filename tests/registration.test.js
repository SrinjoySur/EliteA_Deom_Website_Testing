const { test, expect } = require('@playwright/test');\nconst HomePage = require('../pages/HomePage');\nconst RegistrationPage = require('../pages/RegistrationPage');\n\ntest.describe('User Registration', () => {\n  test('Successful user registration', async ({ page }) => {\n    const homePage = new HomePage(page);\n    const registrationPage = new RegistrationPage(page);\n\n    await homePage.navigate();\n    await homePage.clickSignupLogin();\n    await registrationPage.register('John Doe', 'john.doe@example.com', 'password123');\n    await expect(page).toHaveURL('/login');\n    await expect(page.locator('.confirmation-message')).toHaveText('Registration successful');\n  });\n\n  test('Registration with already registered email', async ({ page }) => {\n    const homePage = new HomePage(page);\n    const registrationPage = new RegistrationPage(page);\n\n    await homePage.navigate();\n    await homePage.clickSignupLogin();\n    await registrationPage.register('John Doe', 'existing.email@example.com', 'password123');\n    await registrationPage.expectErrorMessage('Email already registered');\n  });\n\n  test('Registration with invalid email format', async ({ page }) => {\n    const homePage = new HomePage(page);\n    const registrationPage = new RegistrationPage(page);\n\n    await homePage.navigate();\n    await homePage.clickSignupLogin();\n    await registrationPage.register('John Doe', 'invalid-email', 'password123');\n    await registrationPage.expectErrorMessage('Invalid email format');\n  });\n\n  test('Registration with missing required fields', async ({ page }) => {\n    const homePage = new HomePage(page);\n    const registrationPage = new RegistrationPage(page);\n\n    await homePage.navigate();\n    await homePage.clickSignupLogin();\n    await registrationPage.register('', '', '');\n    await registrationPage.expectErrorMessage('Please fill out this field');\n  });\n});