const { Given, When, Then } = require('@cucumber/cucumber');\nconst { expect } = require('@playwright/test');\n\nGiven('the user has products in the cart', async function () {\n  await page.goto('https://automationexercise.com/cart');\n  await page.click('button.add-to-cart');\n});\n\nWhen('the user proceeds to checkout', async function () {\n  await page.click('button.checkout');\n});\n\nWhen('the user enters valid payment details', async function (dataTable) {\n  const data = dataTable.rowsHash();\n  await page.fill('#cardNumber', data.cardNumber);\n  await page.fill('#expiryDate', data.expiryDate);\n  await page.fill('#cvv', data.cvv);\n});\n\nWhen('the user submits the payment form', async function () {\n  await page.click('button.submit-payment');\n});\n\nThen('the user should see a confirmation message indicating successful checkout', async function () {\n  const confirmationMessage = await page.textContent('.confirmation-message');\n  expect(confirmationMessage).toContain('Checkout successful');\n});\n\nWhen('the user enters invalid payment details', async function (dataTable) {\n  const data = dataTable.rowsHash();\n  await page.fill('#cardNumber', data.cardNumber);\n  await page.fill('#expiryDate', data.expiryDate);\n  await page.fill('#cvv', data.cvv);\n});\n\nThen('the user should see an error message indicating invalid payment details', async function () {\n  const errorMessage = await page.textContent('.error-message');\n  expect(errorMessage).toContain('Invalid payment details');\n});